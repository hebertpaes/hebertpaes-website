# This workflow will build a Docker container, publish it to Google Container Registry,
# and deploy it to Cloud Run when there is a push to the "main" branch.
#
# To configure this workflow:
#
# 1. Ensure the required Google Cloud APIs are enabled:
#    - Cloud Run API
#    - Artifact Registry API
#    - IAM Credentials API
#
# 2. Create and configure Workload Identity Federation for GitHub:
#    https://github.com/google-github-actions/auth#preferred-direct-workload-identity-federation
#
# 3. Ensure your repository contains the necessary configuration for your
#    Google Cloud service account and project.

name: 'Deploy to Cloud Run'

on:
  push:
    branches:
      - "main"

env:
  PROJECT_ID: 'hebertpaes-website'
  GAR_LOCATION: 'europe-west1'
  SERVICE: 'hebertpaes-website'
  REGION: 'europe-west1'

jobs:
  deploy:
    permissions:
      contents: read
      id-token: write

    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Google Auth
        id: auth
        uses: 'google-github-actions/auth@v2'
        with:
          workload_identity_provider: '${{ secrets.WIF_PROVIDER }}'
          service_account: '${{ secrets.WIF_SERVICE_ACCOUNT }}'

      - name: Set up Cloud SDK
        uses: 'google-github-actions/setup-gcloud@v2'

      - name: Configure Docker to use gcloud as a credential helper
        run: |
          gcloud auth configure-docker $GAR_LOCATION-docker.pkg.dev

      - name: Build and Push Container
        run: |
          docker build -t "$GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$SERVICE/$SERVICE:$GITHUB_SHA" ./
          docker push "$GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$SERVICE/$SERVICE:$GITHUB_SHA"

      - name: Deploy to Cloud Run
        id: deploy
        uses: google-github-actions/deploy-cloudrun@v2
        with:
          service: ${{ env.SERVICE }}
          region: ${{ env.REGION }}
          image: ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.SERVICE }}/${{ env.SERVICE }}:${{ github.sha }}
          env_vars: |
            NODE_ENV=production
            GOOGLE_CLOUD_PROJECT=${{ env.PROJECT_ID }}

      - name: Show Output
        run: echo ${{ steps.deploy.outputs.url }}
